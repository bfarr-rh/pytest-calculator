kind: Template
apiVersion: v1
metadata:
  name: pytest-calculator-prod-deployment-template
parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: pytest-calculator
objects:
  - kind: ImageStream
    apiVersion: v1
    metadata:
      labels:
        app: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec: {}
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    data:
      PYTEST_ENVIRONMENT: prod
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 25%
          maxSurge: 25%
        resources: {}
        activeDeadlineSeconds: 21600
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: false
            containerNames:
              - ${APPLICATION_NAME}
            from:
              kind: ImageStreamTag
              name: '${APPLICATION_NAME}:live'
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: ${APPLICATION_NAME}
      template:
        metadata:
          labels:
            app: ${APPLICATION_NAME}
        spec:
          containers:
          - env:
              - name: PYTEST_ENVIRONMENT
                valueFrom:
                  configMapKeyRef:
                    name: ${APPLICATION_NAME}
                    key: PYTEST_ENVIRONMENT
            imagePullPolicy: Always
            livenessProbe:
              exec:
                command:
                  - pytest
                  - ./calc/tests/liveness-test.py
              initialDelaySeconds: 30
              timeoutSeconds: 45
              periodSeconds: 60
              successThreshold: 1
              failureThreshold: 4
            name: ${APPLICATION_NAME}
            ports:
            - containerPort: 8080
              protocol: TCP
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                cpu: 200m
                memory: 200Mi
  - kind: Service
    apiVersion: v1
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        app: ${APPLICATION_NAME}
    spec:
      ports:
        - name: 8080-tcp
          protocol: TCP
          port: 8080
          targetPort: 8080
      selector:
        app: ${APPLICATION_NAME}
        deploymentconfig: ${APPLICATION_NAME}

